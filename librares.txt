android {
    useLibrary 'org.apache.http.legacy'
 
}


            implementation 'com.android.support:appcompat-v7:27.1.1'
            implementation 'com.android.support:cardview-v7:27.1.1'
            implementation 'com.android.support:design:27.1.1'
            implementation 'com.mikhaellopez:circularimageview:3.0.2'
            implementation 'com.android.support:recyclerview-v7:27.1.1'



            implementation 'com.squareup.picasso:picasso:2.71828'

            Picasso.get().load(itemDatas.get(i).getRres()).placeholder(R.drawable.default_img).centerCrop().resize(800, 800).into(vh.imageView);






        <de.hdodenhof.circleimageview.CircleImageView xmlns:app="http://schemas.android.com/apk/res-auto"
            android:id="@+id/imageView"
            android:layout_width="70dp"
            android:layout_height="70dp"
            android:src="@mipmap/imgpsh_fullsize"
            app:civ_border_color="@color/darkgreen"
            app:civ_border_width="1dp"
            app:civ_fill_color="@color/layout_bg" />








    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

  public static void universalImageUpload(String imagepath, ImageView imageview, Context ctx) {
        DisplayImageOptions options = new DisplayImageOptions.Builder().cacheInMemory(true).cacheOnDisc(true)
                .resetViewBeforeLoading(true).showImageOnFail(R.drawable.no_image)
                .showImageOnLoading(R.drawable.no_image)
                .build();

        ImageLoader.getInstance().init(ImageLoaderConfiguration.createDefault(ctx));
        // END - UNIVERSAL IMAGE LOADER SETUP

        ImageLoader imageLoader = ImageLoader.getInstance();
        if (!imagepath.equals("")) {
            imageLoader.displayImage(imagepath, imageview, options);
        } else {
            imageview.setImageDrawable(ctx.getResources().getDrawable(R.drawable.no_image));
        }

    }